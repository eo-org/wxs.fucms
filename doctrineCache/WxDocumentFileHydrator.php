<?php

namespace DoctrineMongoHydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class WxDocumentFileHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = $value instanceof \MongoId ? (string) $value : $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['openId'])) {
            $value = $data['openId'];
            $return = (string) $value;
            $this->class->reflFields['openId']->setValue($document, $return);
            $hydratedData['openId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['resourceType'])) {
            $value = $data['resourceType'];
            $return = (string) $value;
            $this->class->reflFields['resourceType']->setValue($document, $return);
            $hydratedData['resourceType'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['resourceId'])) {
            $value = $data['resourceId'];
            $return = (string) $value;
            $this->class->reflFields['resourceId']->setValue($document, $return);
            $hydratedData['resourceId'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['filename'])) {
            $value = $data['filename'];
            $return = (string) $value;
            $this->class->reflFields['filename']->setValue($document, $return);
            $hydratedData['filename'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['urlname'])) {
            $value = $data['urlname'];
            $return = (string) $value;
            $this->class->reflFields['urlname']->setValue($document, $return);
            $hydratedData['urlname'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['size'])) {
            $value = $data['size'];
            $return = (int) $value;
            $this->class->reflFields['size']->setValue($document, $return);
            $hydratedData['size'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['mimeType'])) {
            $value = $data['mimeType'];
            $return = (string) $value;
            $this->class->reflFields['mimeType']->setValue($document, $return);
            $hydratedData['mimeType'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ext'])) {
            $value = $data['ext'];
            $return = (string) $value;
            $this->class->reflFields['ext']->setValue($document, $return);
            $hydratedData['ext'] = $return;
        }
        return $hydratedData;
    }
}